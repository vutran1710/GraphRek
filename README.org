#+OPTIONS: ^:nil
#+TITLE: GraphRek
#+DATE: <2018-07-31 Tue>
#+AUTHOR: Vu Tran
#+EMAIL: me@vutr.io`

* Content                                                               :TOC:
- [[#introduction][Introduction]]
- [[#setting-up][Setting up]]
- [[#how-to-use][How to use]]

* Introduction
This is a demo how to use Graphdb /Neo4j/ for a recommendation system.
In this demo, there will be /post/ with /labels/ to be created and stored as a graph database.
Then we can use Cyper to query posts with related /labels/.

* Setting up
#+begin_src shell
$ docker-compose up -d
$ pipenv install --dev
#+end_src

#+begin_src shell
$ pipenv run dev
#+end_src

* How to use
1) Neo4j Database Web Client can be accessed at /localhost:7474/
This web-based client provides visual details and Cyper CLI to interact with the current Database.
To connect:
+ Type in the commandline located at the top of the *Web-Client*
#+begin_src shell
:server connect
#+end_src
+ Change the *Connect URL* to *bolt://neo4j:test@localhost:7687* (as set in /config.ini/)
+ Authenticate with USERNAME / PASSWORD using:
#+begin_src  code
USER: neo4j
PWD: test
#+end_src

2) Running Fastapi Application, go to *localhost:8000/docs* for api usage:
+ Create /labels/: *PUT* -> ~/thing/create-labels~

  Create some distinct labels first, eg: ~food, travel, blog, technology, music~ etc

+ Create /posts/: *PUT* -> ~/thing/create-posts?label=some-label~

  Create some posts for a specific label. A single post can use multiple labels *(M2M model)*
Post data required:
#+begin_src shell
{
  "id": "some-random-id",
  "score": 1999 # score of the post
}
#+end_src

+ Query posts by specific labels: *GET* -> ~/thing/get-posts?label=some-label~

Calling this api will query posts that are labelled with the specified labels, order by the posts' scores.
At the same time, it will return some more recommended posts with indirect relation to the queried labels.

The relationship can be seen as: (Ref. to ~conn/neo4j.py~)

#+begin_src shell
(specified_label)<--(direct_related_post)-->(random_label)<--(recommended_posts)-//->(specified_label)
#+end_src
